services:
  api:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-3.amazonaws.com/resume-assistant:latest
    restart: always
    ports:
      - "3000:3000"
    logging:
      driver: awslogs
      options:
        awslogs-region: eu-west-3
        awslogs-group: resume-assistant
        awslogs-stream: resume-assistant-docker_api-prod
    env_file:
      - .env
    volumes:
      - ./api/credentials:/home/node/app/credentials
      - ./api/resources/documents:/home/node/app/resources/documents
      - ./api/resources/images:/home/node/app/resources/images
    depends_on:
      - mongo
    networks:
      - web
      - db

  nginx:
    image: nginx:stable
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - .docker/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - api
    networks:
      - web

  mongo:
    image: mongo:7
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/data/db
      - .docker/mongo/01_init.js:/docker-entrypoint-initdb.d/01_init.js:ro
    networks:
      - db

  redis:
    image: redis/redis-stack-server:7.4.0-v0
    restart: always
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_ARGS: --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - db

volumes:
  db_data:
  redis_data:


networks:
  db:
  web:
    driver: bridge
